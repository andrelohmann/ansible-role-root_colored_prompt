# -*- mode: ruby -*-
# vi: set ft=ruby :

# load configs
require 'yaml'
current_dir    = File.dirname(File.expand_path(__FILE__))
configs        = YAML.load_file("#{current_dir}/config.yaml")
vagrant_config = configs['configs']

#require necessary plugins
required_plugins = %w( vagrant-vbguest )
required_plugins.each do |plugin|
  system "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

Vagrant.configure(2) do |config|

  config.vm.define "box" do |b|
    b.vm.box = "ubuntu/jammy64" # 22.04
    b.vm.provider "virtualbox" do |vb|
      vb.memory = vagrant_config['memory']
      vb.cpus = vagrant_config['cpus']
      vb.customize ["modifyvm", :id, "--audio", "none"]
    end

    b.vm.synced_folder ".", "/vagrant", disabled: true
    b.vm.synced_folder ".", "/vagrant/ansible_vagrant", create: true, owner: "vagrant", group: "vagrant", mount_options: ["dmode=775,fmode=775"]
    b.vm.synced_folder "../.", "/etc/ansible/roles/ansible-role-root_colored_prompt", create: true, owner: "vagrant", group: "vagrant", mount_options: ["dmode=775,fmode=775"]

    # auto update guest additions
    b.vbguest.auto_update = true

    # Run Ansible from the Vagrant VM
    b.vm.provision "shell", inline: "apt update && apt install python3-pip docker.io tree -yqq"
    b.vm.provision "shell", inline: "usermod -aG docker vagrant"
    b.vm.provision "shell", inline: "pip install --user --upgrade ansible-core ansible-lint yamllint ansible molecule[lint,docker] docker testinfra", privileged: false
    b.vm.provision "shell", inline: "echo export PATH=$PATH:/home/vagrant/.local/bin >> /home/vagrant/.bashrc", privileged: false

    # Run Ansible from the Vagrant VM
    b.vm.provision "shell", inline: "apt update && apt install python3-pip -yqq"
    b.vm.provision "shell", inline: "pip install --upgrade ansible-core"
    # if you need to test with a specific version
    # e.g. Ansible Version 2.11 is important for kubespray
    # b.vm.provision "shell", inline: "pip install --upgrade ansible-core~=2.11.0"
    b.vm.provision "ansible_local" do |ansible|
      ansible.install = false
      ansible.playbook = "ansible_vagrant/playbook.yml"
      ansible.galaxy_role_file = "ansible_vagrant/requirements.yml"
      #Uncomment when ansible 2.10 is available
      #ansible.galaxy_command = "sudo ansible-galaxy install -r %{role_file} --force; sudo ansible-galaxy collection install -r %{role_file} --force"
      ansible.extra_vars = {
        ansible_python_interpreter:"/usr/bin/python3"
      }
    end
  end
end
